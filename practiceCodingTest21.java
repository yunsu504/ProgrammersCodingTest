package com.oopsw.test;
/* 코딩테스트 연습
연습문제
최대공약수와 최소공배수
도움말
컴파일 옵션
최대공약수와 최소공배수
문제 설명
두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요. 배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.

제한 사항
두 수는 1이상 1000000이하의 자연수입니다.
입출력 예
n	m	return
3	12	[3, 12]
2	5	[1, 10]
입출력 예 설명
입출력 예 #1
위의 설명과 같습니다.

입출력 예 #2
자연수 2와 5의 최대공약수는 1, 최소공배수는 10이므로 [1, 10]을 리턴해야 합니다.*/ 
public class practiceCodingTest21 {

	public static void main(String[] args) {
	int n = 33;
	int m = 1512;
	int[] answer = new int[2];
	//최대공약수
	for (double i = m; i > 0; i--){
		 if (n % i == 0.0 && m % i == 0.0){
			 answer[0] = (int) i;
			 break;
		 }
	} 
	//최소공배수
	int i = 1, j = 1;
	while (answer[1] == 0)	{
		while (n * j <= m * i){
			if ( n * j == m * i ){
				answer[1] = n * j;
			}	
			j++;
		}
		i++;
	}
	}

}
/*실행 결과
채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (0.02ms, 52MB)
테스트 2 〉	통과 (0.03ms, 52.3MB)
테스트 3 〉	통과 (0.02ms, 51.9MB)
테스트 4 〉	통과 (0.04ms, 52.4MB)
테스트 5 〉	통과 (0.02ms, 52.8MB)
테스트 6 〉	통과 (0.03ms, 52.8MB)
테스트 7 〉	통과 (0.02ms, 53.5MB)
테스트 8 〉	통과 (0.03ms, 55.2MB)
테스트 9 〉	통과 (0.03ms, 52.1MB)
테스트 10 〉	통과 (0.03ms, 51.9MB)
테스트 11 〉	통과 (0.21ms, 52.5MB)
테스트 12 〉	통과 (0.21ms, 53.3MB)
테스트 13 〉	통과 (0.21ms, 53.1MB)
테스트 14 〉	통과 (0.16ms, 52.6MB)
테스트 15 〉	통과 (0.09ms, 52MB)
테스트 16 〉	통과 (0.14ms, 51.6MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0*/